/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated.messages;

import no.sintef.jasm.*;
import no.sintef.jasm.ext.*;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.io.File;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.List;
import java.util.ArrayList;
import java.io.IOException;

import java.util.*;
import java.nio.*;

public class Response_server_dataMessageType extends EventType {
public Response_server_dataMessageType(short code) {super("response_server_data", code);
}

public Response_server_dataMessageType() {
super("response_server_data", (short) 0);
}

public Event instantiate(final double cpu_user, final double cpu_system, final double cpu_wait, final double disk_read, final double disk_write, final double mem_used, final double swap_used, final double net_eth0_rx, final double net_eth0_tx, final double net_eth1_rx, final double net_eth1_tx, final double sch_threads) { return new Response_server_dataMessage(this, cpu_user, cpu_system, cpu_wait, disk_read, disk_write, mem_used, swap_used, net_eth0_rx, net_eth0_tx, net_eth1_rx, net_eth1_tx, sch_threads); }
public Event instantiate(Map<String, Object> params) {return instantiate((Double) params.get("cpu_user"), (Double) params.get("cpu_system"), (Double) params.get("cpu_wait"), (Double) params.get("disk_read"), (Double) params.get("disk_write"), (Double) params.get("mem_used"), (Double) params.get("swap_used"), (Double) params.get("net_eth0_rx"), (Double) params.get("net_eth0_tx"), (Double) params.get("net_eth1_rx"), (Double) params.get("net_eth1_tx"), (Double) params.get("sch_threads"));
}

public class Response_server_dataMessage extends Event implements java.io.Serializable {

public final double cpu_user;
public final double cpu_system;
public final double cpu_wait;
public final double disk_read;
public final double disk_write;
public final double mem_used;
public final double swap_used;
public final double net_eth0_rx;
public final double net_eth0_tx;
public final double net_eth1_rx;
public final double net_eth1_tx;
public final double sch_threads;
public String toString(){
return "response_server_data (" + "cpu_user: " + cpu_user + ", " + "cpu_system: " + cpu_system + ", " + "cpu_wait: " + cpu_wait + ", " + "disk_read: " + disk_read + ", " + "disk_write: " + disk_write + ", " + "mem_used: " + mem_used + ", " + "swap_used: " + swap_used + ", " + "net_eth0_rx: " + net_eth0_rx + ", " + "net_eth0_tx: " + net_eth0_tx + ", " + "net_eth1_rx: " + net_eth1_rx + ", " + "net_eth1_tx: " + net_eth1_tx + ", " + "sch_threads: " + sch_threads + ")";
}

protected Response_server_dataMessage(EventType type, final double cpu_user, final double cpu_system, final double cpu_wait, final double disk_read, final double disk_write, final double mem_used, final double swap_used, final double net_eth0_rx, final double net_eth0_tx, final double net_eth1_rx, final double net_eth1_tx, final double sch_threads) {
super(type);
this.cpu_user = cpu_user;
this.cpu_system = cpu_system;
this.cpu_wait = cpu_wait;
this.disk_read = disk_read;
this.disk_write = disk_write;
this.mem_used = mem_used;
this.swap_used = swap_used;
this.net_eth0_rx = net_eth0_rx;
this.net_eth0_tx = net_eth0_tx;
this.net_eth1_rx = net_eth1_rx;
this.net_eth1_tx = net_eth1_tx;
this.sch_threads = sch_threads;
}
public Event clone() {
return instantiate(this.cpu_user, this.cpu_system, this.cpu_wait, this.disk_read, this.disk_write, this.mem_used, this.swap_used, this.net_eth0_rx, this.net_eth0_tx, this.net_eth1_rx, this.net_eth1_tx, this.sch_threads);
}}

}

