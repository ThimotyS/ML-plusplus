/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import no.sintef.jasm.*;
import no.sintef.jasm.ext.*;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.io.File;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.List;
import java.util.ArrayList;
import java.io.IOException;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;

/**
 * Definition for type : CMS
 **/
public class CMS extends Component implements ICMS_server_service {

private boolean debug = false;
public boolean isDebug() {return debug;}
public void setDebug(boolean debug) {this.debug = debug;}
public String toString() {
String result = "instance " + getName() + "\n";
result += "\tcpu_user = " + CMS_cpu_user_var;
result += "\tcpu_system = " + CMS_cpu_system_var;
result += "\tcpu_wait = " + CMS_cpu_wait_var;
result += "\tdisk_read = " + CMS_disk_read_var;
result += "\tdisk_write = " + CMS_disk_write_var;
result += "\tmem_used = " + CMS_mem_used_var;
result += "\tswap_used = " + CMS_swap_used_var;
result += "\tnet_eth0_rx = " + CMS_net_eth0_rx_var;
result += "\tnet_eth0_tx = " + CMS_net_eth0_tx_var;
result += "\tnet_eth1_rx = " + CMS_net_eth1_rx_var;
result += "\tnet_eth1_tx = " + CMS_net_eth1_tx_var;
result += "\tsch_threads = " + CMS_sch_threads_var;
result += "";
return result;
}

public synchronized void response_server_data_via_server_service(double OutageMessages_response_server_data_cpu_user_var, double OutageMessages_response_server_data_cpu_system_var, double OutageMessages_response_server_data_cpu_wait_var, double OutageMessages_response_server_data_disk_read_var, double OutageMessages_response_server_data_disk_write_var, double OutageMessages_response_server_data_mem_used_var, double OutageMessages_response_server_data_swap_used_var, double OutageMessages_response_server_data_net_eth0_rx_var, double OutageMessages_response_server_data_net_eth0_tx_var, double OutageMessages_response_server_data_net_eth1_rx_var, double OutageMessages_response_server_data_net_eth1_tx_var, double OutageMessages_response_server_data_sch_threads_var){
final Event _msg = response_server_dataType.instantiate(OutageMessages_response_server_data_cpu_user_var, OutageMessages_response_server_data_cpu_system_var, OutageMessages_response_server_data_cpu_wait_var, OutageMessages_response_server_data_disk_read_var, OutageMessages_response_server_data_disk_write_var, OutageMessages_response_server_data_mem_used_var, OutageMessages_response_server_data_swap_used_var, OutageMessages_response_server_data_net_eth0_rx_var, OutageMessages_response_server_data_net_eth0_tx_var, OutageMessages_response_server_data_net_eth1_rx_var, OutageMessages_response_server_data_net_eth1_tx_var, OutageMessages_response_server_data_sch_threads_var);
_msg.setPort(server_service_port);
receive(_msg);
}

private void sendRequest_outage_prediction_via_outage_service(double OutageMessages_request_outage_prediction_cpu_user_var, double OutageMessages_request_outage_prediction_cpu_system_var, double OutageMessages_request_outage_prediction_cpu_wait_var, double OutageMessages_request_outage_prediction_disk_read_var, double OutageMessages_request_outage_prediction_disk_write_var, double OutageMessages_request_outage_prediction_mem_used_var, double OutageMessages_request_outage_prediction_swap_used_var, double OutageMessages_request_outage_prediction_net_eth0_rx_var, double OutageMessages_request_outage_prediction_net_eth0_tx_var, double OutageMessages_request_outage_prediction_net_eth1_rx_var, double OutageMessages_request_outage_prediction_net_eth1_tx_var, double OutageMessages_request_outage_prediction_sch_threads_var){
outage_service_port.send(request_outage_predictionType.instantiate(OutageMessages_request_outage_prediction_cpu_user_var, OutageMessages_request_outage_prediction_cpu_system_var, OutageMessages_request_outage_prediction_cpu_wait_var, OutageMessages_request_outage_prediction_disk_read_var, OutageMessages_request_outage_prediction_disk_write_var, OutageMessages_request_outage_prediction_mem_used_var, OutageMessages_request_outage_prediction_swap_used_var, OutageMessages_request_outage_prediction_net_eth0_rx_var, OutageMessages_request_outage_prediction_net_eth0_tx_var, OutageMessages_request_outage_prediction_net_eth1_rx_var, OutageMessages_request_outage_prediction_net_eth1_tx_var, OutageMessages_request_outage_prediction_sch_threads_var));
}

private void sendRequest_server_data_via_server_service(){
server_service_port.send(request_server_dataType.instantiate());
}

//Attributes
private double CMS_cpu_system_var;
private double CMS_disk_write_var;
private double CMS_net_eth1_tx_var;
private double CMS_cpu_wait_var;
private double CMS_disk_read_var;
private double CMS_swap_used_var;
private double CMS_net_eth1_rx_var;
private double CMS_mem_used_var;
private double CMS_net_eth0_tx_var;
private double CMS_sch_threads_var;
private double CMS_cpu_user_var;
private double CMS_net_eth0_rx_var;
//Ports
private Port outage_service_port;
private Port server_service_port;
//Message types
protected final Request_server_dataMessageType request_server_dataType = new Request_server_dataMessageType();
protected final Response_server_dataMessageType response_server_dataType = new Response_server_dataMessageType();
protected final Request_outage_predictionMessageType request_outage_predictionType = new Request_outage_predictionMessageType();
//Empty Constructor
public CMS() {
super();
}

//Getters and Setters for non readonly/final attributes
public double getCMS_cpu_system_var() {
return CMS_cpu_system_var;
}

public void setCMS_cpu_system_var(double CMS_cpu_system_var) {
this.CMS_cpu_system_var = CMS_cpu_system_var;
}

public CMS initCMS_cpu_system_var(double CMS_cpu_system_var) {
this.CMS_cpu_system_var = CMS_cpu_system_var;
return this;
}

public double getCMS_disk_write_var() {
return CMS_disk_write_var;
}

public void setCMS_disk_write_var(double CMS_disk_write_var) {
this.CMS_disk_write_var = CMS_disk_write_var;
}

public CMS initCMS_disk_write_var(double CMS_disk_write_var) {
this.CMS_disk_write_var = CMS_disk_write_var;
return this;
}

public double getCMS_net_eth1_tx_var() {
return CMS_net_eth1_tx_var;
}

public void setCMS_net_eth1_tx_var(double CMS_net_eth1_tx_var) {
this.CMS_net_eth1_tx_var = CMS_net_eth1_tx_var;
}

public CMS initCMS_net_eth1_tx_var(double CMS_net_eth1_tx_var) {
this.CMS_net_eth1_tx_var = CMS_net_eth1_tx_var;
return this;
}

public double getCMS_cpu_wait_var() {
return CMS_cpu_wait_var;
}

public void setCMS_cpu_wait_var(double CMS_cpu_wait_var) {
this.CMS_cpu_wait_var = CMS_cpu_wait_var;
}

public CMS initCMS_cpu_wait_var(double CMS_cpu_wait_var) {
this.CMS_cpu_wait_var = CMS_cpu_wait_var;
return this;
}

public double getCMS_disk_read_var() {
return CMS_disk_read_var;
}

public void setCMS_disk_read_var(double CMS_disk_read_var) {
this.CMS_disk_read_var = CMS_disk_read_var;
}

public CMS initCMS_disk_read_var(double CMS_disk_read_var) {
this.CMS_disk_read_var = CMS_disk_read_var;
return this;
}

public double getCMS_swap_used_var() {
return CMS_swap_used_var;
}

public void setCMS_swap_used_var(double CMS_swap_used_var) {
this.CMS_swap_used_var = CMS_swap_used_var;
}

public CMS initCMS_swap_used_var(double CMS_swap_used_var) {
this.CMS_swap_used_var = CMS_swap_used_var;
return this;
}

public double getCMS_net_eth1_rx_var() {
return CMS_net_eth1_rx_var;
}

public void setCMS_net_eth1_rx_var(double CMS_net_eth1_rx_var) {
this.CMS_net_eth1_rx_var = CMS_net_eth1_rx_var;
}

public CMS initCMS_net_eth1_rx_var(double CMS_net_eth1_rx_var) {
this.CMS_net_eth1_rx_var = CMS_net_eth1_rx_var;
return this;
}

public double getCMS_mem_used_var() {
return CMS_mem_used_var;
}

public void setCMS_mem_used_var(double CMS_mem_used_var) {
this.CMS_mem_used_var = CMS_mem_used_var;
}

public CMS initCMS_mem_used_var(double CMS_mem_used_var) {
this.CMS_mem_used_var = CMS_mem_used_var;
return this;
}

public double getCMS_net_eth0_tx_var() {
return CMS_net_eth0_tx_var;
}

public void setCMS_net_eth0_tx_var(double CMS_net_eth0_tx_var) {
this.CMS_net_eth0_tx_var = CMS_net_eth0_tx_var;
}

public CMS initCMS_net_eth0_tx_var(double CMS_net_eth0_tx_var) {
this.CMS_net_eth0_tx_var = CMS_net_eth0_tx_var;
return this;
}

public double getCMS_sch_threads_var() {
return CMS_sch_threads_var;
}

public void setCMS_sch_threads_var(double CMS_sch_threads_var) {
this.CMS_sch_threads_var = CMS_sch_threads_var;
}

public CMS initCMS_sch_threads_var(double CMS_sch_threads_var) {
this.CMS_sch_threads_var = CMS_sch_threads_var;
return this;
}

public double getCMS_cpu_user_var() {
return CMS_cpu_user_var;
}

public void setCMS_cpu_user_var(double CMS_cpu_user_var) {
this.CMS_cpu_user_var = CMS_cpu_user_var;
}

public CMS initCMS_cpu_user_var(double CMS_cpu_user_var) {
this.CMS_cpu_user_var = CMS_cpu_user_var;
return this;
}

public double getCMS_net_eth0_rx_var() {
return CMS_net_eth0_rx_var;
}

public void setCMS_net_eth0_rx_var(double CMS_net_eth0_rx_var) {
this.CMS_net_eth0_rx_var = CMS_net_eth0_rx_var;
}

public CMS initCMS_net_eth0_rx_var(double CMS_net_eth0_rx_var) {
this.CMS_net_eth0_rx_var = CMS_net_eth0_rx_var;
return this;
}

//Getters for Ports
public Port getOutage_service_port() {
return outage_service_port;
}
public Port getServer_service_port() {
return server_service_port;
}
private CompositeState buildCMS_CMSBehaviour(){
final AtomicState state_CMS_CMSBehaviour_GetServerData = new AtomicState("GetServerData");
state_CMS_CMSBehaviour_GetServerData.onEntry(()->{
sendRequest_server_data_via_server_service();
});
final AtomicState state_CMS_CMSBehaviour_SetData = new AtomicState("SetData");
Transition h1061998933 = new Transition();
h1061998933.from(state_CMS_CMSBehaviour_GetServerData).to(state_CMS_CMSBehaviour_SetData);
Handler h1349373781 = new Handler();
h1349373781.from(state_CMS_CMSBehaviour_SetData);
h1349373781.event(response_server_dataType);
h1349373781.port(server_service_port);
h1349373781.action((Event e)->{
final Response_server_dataMessageType.Response_server_dataMessage response_server_data = (Response_server_dataMessageType.Response_server_dataMessage) e;
CMS_cpu_user_var = (double) (response_server_data.cpu_user);
CMS_cpu_system_var = (double) (response_server_data.cpu_system);
CMS_cpu_wait_var = (double) (response_server_data.cpu_wait);
CMS_disk_read_var = (double) (response_server_data.disk_read);
CMS_disk_write_var = (double) (response_server_data.disk_write);
CMS_mem_used_var = (double) (response_server_data.mem_used);
CMS_net_eth0_rx_var = (double) (response_server_data.net_eth0_rx);
CMS_net_eth0_tx_var = (double) (response_server_data.net_eth0_tx);
CMS_net_eth1_rx_var = (double) (response_server_data.net_eth1_rx);
CMS_net_eth1_tx_var = (double) (response_server_data.net_eth1_rx);
CMS_sch_threads_var = (double) (response_server_data.sch_threads);
sendRequest_outage_prediction_via_outage_service((double) (getCMS_cpu_user_var()), (double) (getCMS_cpu_system_var()), (double) (getCMS_cpu_wait_var()), (double) (getCMS_disk_read_var()), (double) (getCMS_disk_write_var()), (double) (getCMS_mem_used_var()), (double) (getCMS_swap_used_var()), (double) (getCMS_net_eth0_rx_var()), (double) (getCMS_net_eth0_tx_var()), (double) (getCMS_net_eth1_rx_var()), (double) (getCMS_net_eth1_tx_var()), (double) (getCMS_sch_threads_var()));
});

final CompositeState state_CMS_CMSBehaviour = new CompositeState("CMSBehaviour");
state_CMS_CMSBehaviour.onEntry(()->{
});
state_CMS_CMSBehaviour.add(state_CMS_CMSBehaviour_GetServerData);
state_CMS_CMSBehaviour.add(state_CMS_CMSBehaviour_SetData);
state_CMS_CMSBehaviour.initial(state_CMS_CMSBehaviour_GetServerData);
return state_CMS_CMSBehaviour;
}

public Component buildBehavior(String session, Component root) {
if (root == null) {
//Init ports
outage_service_port = new Port("outage_service", this);
server_service_port = new Port("server_service", this);
} else {
outage_service_port = ((CMS)root).outage_service_port;
server_service_port = ((CMS)root).server_service_port;
}
if (session == null){
//Init state machine
behavior = buildCMS_CMSBehaviour();
}
return this;
}

}
