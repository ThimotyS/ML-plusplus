/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import no.sintef.jasm.*;
import no.sintef.jasm.ext.*;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.io.File;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.List;
import java.util.ArrayList;
import java.io.IOException;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;

/**
 * Definition for type : Server
 **/
public class Server extends Component implements IServer_server_service {

private boolean debug = false;
public boolean isDebug() {return debug;}
public void setDebug(boolean debug) {this.debug = debug;}
public String toString() {
String result = "instance " + getName() + "\n";
result += "\tcpu_user = " + Server_cpu_user_var;
result += "\tcpu_system = " + Server_cpu_system_var;
result += "\tcpu_wait = " + Server_cpu_wait_var;
result += "\tdisk_read = " + Server_disk_read_var;
result += "\tdisk_write = " + Server_disk_write_var;
result += "\tmem_used = " + Server_mem_used_var;
result += "\tswap_used = " + Server_swap_used_var;
result += "\tnet_eth0_rx = " + Server_net_eth0_rx_var;
result += "\tnet_eth0_tx = " + Server_net_eth0_tx_var;
result += "\tnet_eth1_rx = " + Server_net_eth1_rx_var;
result += "\tnet_eth1_tx = " + Server_net_eth1_tx_var;
result += "\tsch_threads = " + Server_sch_threads_var;
result += "";
return result;
}

public synchronized void request_server_data_via_server_service(){
final Event _msg = request_server_dataType.instantiate();
_msg.setPort(server_service_port);
receive(_msg);
}

private void sendResponse_server_data_via_server_service(double OutageMessages_response_server_data_cpu_user_var, double OutageMessages_response_server_data_cpu_system_var, double OutageMessages_response_server_data_cpu_wait_var, double OutageMessages_response_server_data_disk_read_var, double OutageMessages_response_server_data_disk_write_var, double OutageMessages_response_server_data_mem_used_var, double OutageMessages_response_server_data_swap_used_var, double OutageMessages_response_server_data_net_eth0_rx_var, double OutageMessages_response_server_data_net_eth0_tx_var, double OutageMessages_response_server_data_net_eth1_rx_var, double OutageMessages_response_server_data_net_eth1_tx_var, double OutageMessages_response_server_data_sch_threads_var){
server_service_port.send(response_server_dataType.instantiate(OutageMessages_response_server_data_cpu_user_var, OutageMessages_response_server_data_cpu_system_var, OutageMessages_response_server_data_cpu_wait_var, OutageMessages_response_server_data_disk_read_var, OutageMessages_response_server_data_disk_write_var, OutageMessages_response_server_data_mem_used_var, OutageMessages_response_server_data_swap_used_var, OutageMessages_response_server_data_net_eth0_rx_var, OutageMessages_response_server_data_net_eth0_tx_var, OutageMessages_response_server_data_net_eth1_rx_var, OutageMessages_response_server_data_net_eth1_tx_var, OutageMessages_response_server_data_sch_threads_var));
}

//Attributes
private double Server_net_eth0_tx_var;
private double Server_sch_threads_var;
private double Server_cpu_wait_var;
private double Server_net_eth1_tx_var;
private double Server_cpu_user_var;
private double Server_net_eth1_rx_var;
private double Server_swap_used_var;
private double Server_net_eth0_rx_var;
private double Server_disk_write_var;
private double Server_mem_used_var;
private double Server_disk_read_var;
private double Server_cpu_system_var;
//Ports
private Port server_service_port;
//Message types
protected final Request_server_dataMessageType request_server_dataType = new Request_server_dataMessageType();
protected final Response_server_dataMessageType response_server_dataType = new Response_server_dataMessageType();
protected final Request_outage_predictionMessageType request_outage_predictionType = new Request_outage_predictionMessageType();
//Empty Constructor
public Server() {
super();
}

//Getters and Setters for non readonly/final attributes
public double getServer_net_eth0_tx_var() {
return Server_net_eth0_tx_var;
}

public void setServer_net_eth0_tx_var(double Server_net_eth0_tx_var) {
this.Server_net_eth0_tx_var = Server_net_eth0_tx_var;
}

public Server initServer_net_eth0_tx_var(double Server_net_eth0_tx_var) {
this.Server_net_eth0_tx_var = Server_net_eth0_tx_var;
return this;
}

public double getServer_sch_threads_var() {
return Server_sch_threads_var;
}

public void setServer_sch_threads_var(double Server_sch_threads_var) {
this.Server_sch_threads_var = Server_sch_threads_var;
}

public Server initServer_sch_threads_var(double Server_sch_threads_var) {
this.Server_sch_threads_var = Server_sch_threads_var;
return this;
}

public double getServer_cpu_wait_var() {
return Server_cpu_wait_var;
}

public void setServer_cpu_wait_var(double Server_cpu_wait_var) {
this.Server_cpu_wait_var = Server_cpu_wait_var;
}

public Server initServer_cpu_wait_var(double Server_cpu_wait_var) {
this.Server_cpu_wait_var = Server_cpu_wait_var;
return this;
}

public double getServer_net_eth1_tx_var() {
return Server_net_eth1_tx_var;
}

public void setServer_net_eth1_tx_var(double Server_net_eth1_tx_var) {
this.Server_net_eth1_tx_var = Server_net_eth1_tx_var;
}

public Server initServer_net_eth1_tx_var(double Server_net_eth1_tx_var) {
this.Server_net_eth1_tx_var = Server_net_eth1_tx_var;
return this;
}

public double getServer_cpu_user_var() {
return Server_cpu_user_var;
}

public void setServer_cpu_user_var(double Server_cpu_user_var) {
this.Server_cpu_user_var = Server_cpu_user_var;
}

public Server initServer_cpu_user_var(double Server_cpu_user_var) {
this.Server_cpu_user_var = Server_cpu_user_var;
return this;
}

public double getServer_net_eth1_rx_var() {
return Server_net_eth1_rx_var;
}

public void setServer_net_eth1_rx_var(double Server_net_eth1_rx_var) {
this.Server_net_eth1_rx_var = Server_net_eth1_rx_var;
}

public Server initServer_net_eth1_rx_var(double Server_net_eth1_rx_var) {
this.Server_net_eth1_rx_var = Server_net_eth1_rx_var;
return this;
}

public double getServer_swap_used_var() {
return Server_swap_used_var;
}

public void setServer_swap_used_var(double Server_swap_used_var) {
this.Server_swap_used_var = Server_swap_used_var;
}

public Server initServer_swap_used_var(double Server_swap_used_var) {
this.Server_swap_used_var = Server_swap_used_var;
return this;
}

public double getServer_net_eth0_rx_var() {
return Server_net_eth0_rx_var;
}

public void setServer_net_eth0_rx_var(double Server_net_eth0_rx_var) {
this.Server_net_eth0_rx_var = Server_net_eth0_rx_var;
}

public Server initServer_net_eth0_rx_var(double Server_net_eth0_rx_var) {
this.Server_net_eth0_rx_var = Server_net_eth0_rx_var;
return this;
}

public double getServer_disk_write_var() {
return Server_disk_write_var;
}

public void setServer_disk_write_var(double Server_disk_write_var) {
this.Server_disk_write_var = Server_disk_write_var;
}

public Server initServer_disk_write_var(double Server_disk_write_var) {
this.Server_disk_write_var = Server_disk_write_var;
return this;
}

public double getServer_mem_used_var() {
return Server_mem_used_var;
}

public void setServer_mem_used_var(double Server_mem_used_var) {
this.Server_mem_used_var = Server_mem_used_var;
}

public Server initServer_mem_used_var(double Server_mem_used_var) {
this.Server_mem_used_var = Server_mem_used_var;
return this;
}

public double getServer_disk_read_var() {
return Server_disk_read_var;
}

public void setServer_disk_read_var(double Server_disk_read_var) {
this.Server_disk_read_var = Server_disk_read_var;
}

public Server initServer_disk_read_var(double Server_disk_read_var) {
this.Server_disk_read_var = Server_disk_read_var;
return this;
}

public double getServer_cpu_system_var() {
return Server_cpu_system_var;
}

public void setServer_cpu_system_var(double Server_cpu_system_var) {
this.Server_cpu_system_var = Server_cpu_system_var;
}

public Server initServer_cpu_system_var(double Server_cpu_system_var) {
this.Server_cpu_system_var = Server_cpu_system_var;
return this;
}

//Getters for Ports
public Port getServer_service_port() {
return server_service_port;
}
private CompositeState buildServer_ServerBehaviour(){
final AtomicState state_Server_ServerBehaviour_Initial_State = new AtomicState("Initial_State");
Handler h1299885218 = new Handler();
h1299885218.from(state_Server_ServerBehaviour_Initial_State);
h1299885218.event(request_server_dataType);
h1299885218.port(server_service_port);
h1299885218.action((Event e)->{
sendResponse_server_data_via_server_service((double) (getServer_cpu_user_var()), (double) (getServer_cpu_system_var()), (double) (getServer_cpu_wait_var()), (double) (getServer_disk_read_var()), (double) (getServer_disk_write_var()), (double) (getServer_mem_used_var()), (double) (getServer_swap_used_var()), (double) (getServer_net_eth0_rx_var()), (double) (getServer_net_eth0_tx_var()), (double) (getServer_net_eth1_rx_var()), (double) (getServer_net_eth1_tx_var()), (double) (getServer_sch_threads_var()));
});

final CompositeState state_Server_ServerBehaviour = new CompositeState("ServerBehaviour");
state_Server_ServerBehaviour.onEntry(()->{
});
state_Server_ServerBehaviour.add(state_Server_ServerBehaviour_Initial_State);
state_Server_ServerBehaviour.initial(state_Server_ServerBehaviour_Initial_State);
return state_Server_ServerBehaviour;
}

public Component buildBehavior(String session, Component root) {
if (root == null) {
//Init ports
server_service_port = new Port("server_service", this);
} else {
server_service_port = ((Server)root).server_service_port;
}
if (session == null){
//Init state machine
behavior = buildServer_ServerBehaviour();
}
return this;
}

}
